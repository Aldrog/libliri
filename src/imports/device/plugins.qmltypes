import QtQuick.tooling 1.2

// This file describes the plugin-supplied types contained in the library.
// It is used for QML tooling purposes only.
//
// This file was auto-generated by:
// 'qmlplugindump-qt5 -noinstantiate -nonrelocatable Liri.Device 1.0 /home/plfiorini/git/liri/lirios/.build/install-root/lib/qml'

Module {
    dependencies: ["QtQuick 2.8"]
    Component {
        name: "Liri::LocalDevice"
        prototype: "QObject"
        exports: ["Liri.Device/LocalDevice 1.0"]
        isCreatable: false
        isSingleton: true
        exportMetaObjectRevisions: [0]
        Enum {
            name: "Chassis"
            values: {
                "UnknownChassis": 0,
                "DesktopChassis": 1,
                "LaptopChassis": 2,
                "ServerChassis": 3,
                "TabletChassis": 4,
                "PhoneChassis": 5,
                "VirtualMachineChassis": 6,
                "ContainerChassis": 7
            }
        }
        Enum {
            name: "PowerSource"
            values: {
                "BatteryPower": 0,
                "ACPower": 1
            }
        }
        Property { name: "chassis"; type: "Chassis"; isReadonly: true }
        Property { name: "powerSource"; type: "PowerSource"; isReadonly: true }
        Property { name: "lidPresent"; type: "bool"; isReadonly: true }
        Property { name: "lidClosed"; type: "bool"; isReadonly: true }
        Property { name: "hostName"; type: "string"; isReadonly: true }
        Property { name: "iconName"; type: "string"; isReadonly: true }
        Property { name: "materialIconName"; type: "string"; isReadonly: true }
        Property { name: "operatingSystemName"; type: "string"; isReadonly: true }
        Property { name: "virtualization"; type: "string"; isReadonly: true }
        Property { name: "canPowerOff"; type: "bool"; isReadonly: true }
        Property { name: "canRestart"; type: "bool"; isReadonly: true }
        Property { name: "canSuspend"; type: "bool"; isReadonly: true }
        Property { name: "canHibernate"; type: "bool"; isReadonly: true }
        Property { name: "canHybridSleep"; type: "bool"; isReadonly: true }
        Signal { name: "canHybridSleepdChanged" }
        Method { name: "powerOff" }
        Method { name: "restart" }
        Method { name: "suspend" }
        Method { name: "hibernate" }
        Method { name: "hybridSleep" }
    }
}
